import cv2
import numpy as np
import matplotlib.pyplot as plt
import sys

# === Step 1: Load the MRI image ===
image_path = 'brain1.jpg'  # Replace with your MRI scan image path
image = cv2.imread(image_path)
if image is None:
    print(f"Error: Could not load image from '{image_path}'.")
    sys.exit()

gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
blur = cv2.GaussianBlur(gray, (5, 5), 0)

# === Step 2: Create a mask of the full brain (remove skull) ===
_, brain_thresh = cv2.threshold(blur, 10, 255, cv2.THRESH_BINARY)
contours, _ = cv2.findContours(brain_thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
max_contour = max(contours, key=cv2.contourArea)

brain_mask = np.zeros_like(gray)
cv2.drawContours(brain_mask, [max_contour], -1, 255, thickness=cv2.FILLED)

# Apply the brain mask to remove background/skull
brain_only = cv2.bitwise_and(gray, gray, mask=brain_mask)

# === Step 3: Create a central circular mask inside the brain ===
x, y, w, h = cv2.boundingRect(max_contour)
center = (x + w // 2, y + h // 2)
radius = min(w, h) // 3  # Central brain radius

central_mask = np.zeros_like(gray)
cv2.circle(central_mask, center, radius, 255, -1)

# Combine central mask with brain mask
central_brain_mask = cv2.bitwise_and(brain_mask, central_mask)

# Apply the central mask to get only the center brain region
central_brain = cv2.bitwise_and(brain_only, brain_only, mask=central_brain_mask)

# === Step 4: Detect tumor in the central brain region ===
_, tumor_thresh = cv2.threshold(central_brain, 120, 255, cv2.THRESH_BINARY)
kernel = np.ones((3, 3), np.uint8)
cleaned = cv2.morphologyEx(tumor_thresh, cv2.MORPH_OPEN, kernel, iterations=2)

# === Step 5: Calculate tumor area and percentage ===
tumor_area = np.sum(cleaned == 255)  # Tumor area in pixels
brain_area = np.sum(central_brain_mask == 255)  # Central brain area in pixels
tumor_percent = (tumor_area / brain_area) * 100 if brain_area > 0 else 0

# === Step 6: Draw tumor outline on the original image ===
tumor_contours, _ = cv2.findContours(cleaned, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
outlined_image = image.copy()
for cnt in tumor_contours:
    if cv2.contourArea(cnt) > 100:  # Ignore small noise
        cv2.drawContours(outlined_image, [cnt], -1, (0, 255, 0), 2)

# === Step 7: Display results ===
print("âœ… Tumor Detection Completed.")
print(f"Tumor Area: {tumor_area} pixels")
print(f"Central Brain Area: {brain_area} pixels")
print(f"Tumor covers approximately: {tumor_percent:.2f}% of central brain")

plt.figure(figsize=(14, 6))

plt.subplot(1, 4, 1)
plt.title('Original MRI')
plt.imshow(gray, cmap='gray')
plt.axis('off')

plt.subplot(1, 4, 2)
plt.title('Full Brain Masked')
plt.imshow(brain_only, cmap='gray')
plt.axis('off')

plt.subplot(1, 4, 3)
plt.title('Central Brain Only')
plt.imshow(central_brain, cmap='gray')
plt.axis('off')

plt.subplot(1, 4, 4)
plt.title('Tumor Outlined')
plt.imshow(cv2.cvtColor(outlined_image, cv2.COLOR_BGR2RGB))
plt.axis('off')

plt.tight_layout()
plt.show()
